name: Build and Deploy to Minikube.

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker to use Minikube's environment.
        shell: powershell
        run: |
            echo "Configuring Docker to use Minikube's daemon..."
            # First display the docker-env command to verify it looks correct
            & minikube -p minikube docker-env --shell powershell
            # Then apply the environment
            & minikube -p minikube docker-env --shell powershell | Invoke-Expression
            # Verify Docker configuration
            echo "Docker daemon information:"
            docker info

      - name: Build Backend Docker Image
        run: |
          echo "Building backend image..."
          docker build -t abdulmoizhassan/blood-donation-backend:latest -f backend/Dockerfile backend/
          echo "Backend image built successfully."
          docker images | findstr "abdulmoizhassan/blood-donation-backend"

      - name: Build Frontend Docker Image
        run: |
          echo "Building frontend image..."
          docker build -t abdulmoizhassan/blood-donation-frontend:latest -f frontend/Dockerfile frontend/
          echo "Frontend image built successfully."
          docker images | findstr "abdulmoizhassan/blood-donation-frontend"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Backend Image to Docker Hub with Debugging
        shell: powershell
        run: |
          echo "Pushing backend image to Docker Hub..."
          echo "Current Docker images:"
          docker images
          echo "Attempting push operation..."
          $pushResult = docker push abdulmoizhassan/blood-donation-backend:latest
          if ($LASTEXITCODE -ne 0) {
            echo "Push failed with exit code $LASTEXITCODE"
            echo "Push output: $pushResult"
            exit 1
          } else {
            echo "Backend image pushed successfully."
          }

      - name: Push Frontend Image to Docker Hub with Debugging
        shell: powershell
        run: |
          echo "Pushing frontend image to Docker Hub..."
          echo "Attempting push operation..."
          $pushResult = docker push abdulmoizhassan/blood-donation-frontend:latest
          if ($LASTEXITCODE -ne 0) {
            echo "Push failed with exit code $LASTEXITCODE"
            echo "Push output: $pushResult"
            exit 1
          } else {
            echo "Frontend image pushed successfully."
          }

      - name: Create Kubernetes namespace
        run: |
          echo "Creating/updating Kubernetes namespace..."
          kubectl create namespace blood-donation --dry-run=client -o yaml | kubectl apply -f -
          echo "Namespace status:"
          kubectl get namespace blood-donation

      - name: Apply MongoDB Deployment
        run: |
            echo "Applying MongoDB deployment..."
            kubectl apply -f mongo-deployment.yaml -n blood-donation
            echo "MongoDB deployment status:"
            kubectl get deployments -n blood-donation -l app=mongodb

      - name: Apply Backend Deployment
        run: |
          echo "Deploying backend..."
          kubectl apply -f deployment.yaml -n blood-donation
          kubectl apply -f service.yaml -n blood-donation
          echo "Backend deployment applied."

      - name: Apply Frontend Deployment
        run: |
          echo "Deploying frontend..."
          kubectl apply -f frontend-deployment.yaml -n blood-donation
          kubectl apply -f frontend-service.yaml -n blood-donation
          echo "Frontend deployment applied."

      - name: Verify Deployment
        run: |
          echo "Verifying deployment..."
          echo "Deployments:"
          kubectl get deployment -n blood-donation
          echo "Pods:"
          kubectl get pods -n blood-donation
          echo "Services:"
          kubectl get services -n blood-donation
          echo "Detailed pod information:"
          kubectl describe pods -n blood-donation | findstr "State:"
